import graph_tf.data.transforms
import graph_tf.projects.isgae.models

adjacency_transform = [
    @gtf.data.transforms.add_identity,
    @gtf.data.transforms.normalize_symmetric,
]

encoder_fn = @gtf.isgae.mlp
gtf.isgae.mlp.output_units = %embedding_dim
gtf.isgae.mlp.hidden_units = %hidden_units
gtf.isgae.mlp.dropout_rate = %dropout_rate

optimizer = @tf.keras.optimizers.Adam()
tf.keras.optimizers.Adam.learning_rate = %lr

callbacks = [@tf.keras.callbacks.EarlyStopping()]

tf.keras.callbacks.EarlyStopping.patience = %patience
tf.keras.callbacks.EarlyStopping.monitor = %monitor
tf.keras.callbacks.EarlyStopping.mode = %mode

mode = 'max'
monitor = 'val_auc_roc'
patience = 50
dropout_rate = 0
from_logits = False

lr = 1e-2
hidden_units = (64,)
embedding_dim = 32
