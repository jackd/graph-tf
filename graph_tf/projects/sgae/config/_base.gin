import graph_tf.projects.sgae
import graph_tf.utils.models

gtf.utils.models.mlp.output_units = @gtf.sgae.get_output_size()
gtf.utils.models.mlp.hidden_units = %hidden_units
gtf.utils.models.mlp.dropout_rate = %dropout_rate
gtf.utils.models.mlp.input_dropout_rate = %input_dropout_rate
gtf.utils.models.mlp.dense_fn = @gtf.utils.models.dense

gtf.utils.models.dense.kernel_regularizer = @tf.keras.regularizers.L2()
tf.keras.regularizers.L2.l2 = %l2_reg

callbacks = []

optimizer = @tf.keras.optimizers.Adam()
tf.keras.optimizers.Adam.learning_rate = %lr

callbacks = [@tf.keras.callbacks.EarlyStopping()]
tf.keras.callbacks.EarlyStopping.patience = %patience
tf.keras.callbacks.EarlyStopping.monitor = 'val_auc_roc'
tf.keras.callbacks.EarlyStopping.mode = 'max'

input_dropout_rate = %dropout_rate
l2_reg = 0
hidden_units = (32, 32)
embedding_dim = 16
dropout_rate = 0
variational = False
kl_scale = 1.0
spectral_size = 64

epochs = 1000
patience = 100
lr = 1e-2
