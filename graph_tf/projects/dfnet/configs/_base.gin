import graph_tf.configurables
import graph_tf.data.single
import graph_tf.projects.dfnet.models

model_fn = @gtf.dfnet.dfnet

gtf.dfnet.dfnet.num_classes = %num_classes

optimizer = @tf.keras.optimizers.Adam()
tf.keras.optimizers.Adam.learning_rate = 0.002

callbacks = [@tf.keras.callbacks.EarlyStopping()]
tf.keras.callbacks.EarlyStopping.restore_best_weights = True
tf.keras.callbacks.EarlyStopping.monitor = %monitor
tf.keras.callbacks.EarlyStopping.patience = %patience
# monitor = 'val_cross_entropy'
monitor = 'val_acc'
patience = 200  # not actually stopping early, just using for restore at end

epochs = 200
