import graph_tf.data.single
import graph_tf.projects.dfnet.models
import kblocks.extras.callbacks
import kblocks.keras.optimizers

gtf.data.preprocess_single.adjacency_fn = @gtf.dfnet.preprocess_adj
model_fn = @gtf.dfnet.dfnet

gtf.dfnet.dfnet.num_classes = %num_classes

optimizer = @tf.keras.optimizers.Adam()
tf.keras.optimizers.Adam.lr = 0.002

callbacks = [@kb.callbacks.EarlyStopping()]
kb.callbacks.EarlyStopping.restore_best_weights = True
kb.callbacks.EarlyStopping.monitor = %monitor
kb.callbacks.EarlyStopping.patience = %patience
# monitor = 'val_cross_entropy'
monitor = 'val_acc'
patience = 200  # not actually stopping early, just using for restore at end

epochs = 200
