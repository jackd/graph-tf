import graph_tf.configurables.kt
import graph_tf.mains.build_and_fit
import graph_tf.utils.experiment_callbacks
import graph_tf.os_utils.experiment_callbacks

gacl.main.fun = @kt.search
gacl.main.callbacks = %experiment_callbacks

experiment_callbacks = [
    @gtf.utils.experiment_callbacks.TensorflowSeedSetter(),
    @gtf.utils.experiment_callbacks.NumpySeedSetter(),
    @gacl.callbacks.GinConfigLogger(),
]
gtf.utils.experiment_callbacks.TensorflowSeedSetter.seed = %seed
gtf.utils.experiment_callbacks.NumpySeedSetter.seed = %seed
seed = 0

kt.search.tuner = %tuner
tuner = @kt.build_tuner()

kt.build_tuner.tuner_cls = %tuner_cls
kt.build_tuner.hypermodel = %hypermodel
kt.build_tuner.directory = %root_dir
kt.build_tuner.project_name = %project_name
kt.build_tuner.overwrite = %overwrite
kt.build_tuner.executions_per_trial = %executions_per_trial
kt.build_tuner.max_trials = %max_trials
kt.build_tuner.objective = @kt.Objective()
kt.build_tuner.seed = %tuner_seed

hypermodel = @kt.LambdaHyperModel()
kt.LambdaHyperModel.build = %build
kt.LambdaHyperModel.fit = %fit

root_dir = @gtf.utils.os_utils.join_star()
root_dir/gtf.utils.os_utils.join_star.args = [%GTF_DATA_DIR, 'tune']

GTF_DATA_DIR = @gtf.utils.os_utils.expand()
GTF_DATA_DIR/gtf.utils.os_utils.expand.path = @gtf.utils.os_utils.get_environ()
GTF_DATA_DIR/gtf.utils.os_utils.get_environ.key = "GTF_DATA_DIR"
GTF_DATA_DIR/gtf.utils.os_utils.get_environ.default = "$HOME/gtf-data"

overwrite = False
executions_per_trial = 1
tuner_seed = 0

project_name = None
max_trials = None
fit = None
